---
import TimeToInbox from '~/components/widgets/TimeToInbox.astro';
import Layout from '~/layouts/PageLayout.astro';

const metadata = {
  title: 'MailPace - Fast Transactional Email',
};
---

<Layout metadata={metadata}>
  <div class="pt-36">
    <div class="container mx-auto w-4/5 md:flex-row text-center">
      <div class="w-full md:w-4/5 mx-auto">
        <h1 class="text-5xl font-bold leading-tight">
          Fast transactional email service
        </h1>
        <p class="uppercase">Why MailPace</p>
      </div>
    </div>
  </div>
  <div class="mt-20 pb-12 pt-12 text-black bg-white">
    <div class="container items-center px-3 pb-4 mx-auto md:w-2/5 md:flex-row leading-7">
      <p class="my-4">
        <strong>Transactional emails need to arrive in the inbox now.</strong> They are often used for activities that require
        an immediate response (e.g. account verification) and slow transactional emails are not an option. In many cases
        users expect transactional emails to land in their inbox almost instantly, and it can be real detraction to customer
        confidence when they don't. If you've ever had to wait a few hours for a receipt for an online purchase, you will
        know exactly why.
      </p>

      <TimeToInbox />

    </div>
  </div>
</Layout>

<script>
  const average = (arr) => (arr.reduce((p, c) => p + parseFloat(c), 0) / arr.length).toFixed(2);

  function updateScores(scores: { gmail: string[]; outlook: string[]; yahoo: string[] }) {
    const gmailLatest = document.getElementById('gmail-latest');
    const gmailAverage = document.getElementById('gmail-average');
    const outlookLatest = document.getElementById('outlook-latest');
    const outlookAverage = document.getElementById('outlook-average');
    const yahooLatest = document.getElementById('yahoo-latest');
    const yahooAverage = document.getElementById('yahoo-average');

    if (gmailLatest) gmailLatest.textContent = parseFloat(scores.gmail[0]).toFixed(2);
    if (gmailAverage) gmailAverage.textContent = average(scores.gmail);
    if (outlookLatest) outlookLatest.textContent = parseFloat(scores.outlook[0]).toFixed(2);
    if (outlookAverage) outlookAverage.textContent = average(scores.outlook);
    if (yahooLatest) yahooLatest.textContent = parseFloat(scores.yahoo[0]).toFixed(2);
    if (yahooAverage) yahooAverage.textContent = average(scores.yahoo);
  }

  if (document.getElementById('time-to-inbox')) {
    fetch('https://app.mailpace.com/api/v1/time_to_inbox')
      .then((response) => response.json())
      .then((scores) => updateScores(scores));
  }
</script>
